name: Deploy Terraform to Azure

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  workflow_dispatch: # Allow manual triggering

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7 # Adjust to your Terraform version

      # Authenticate with Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Step 4: Pass Service Principal Credentials as Environment Variables
      - name: Export Azure Environment Variables
        run: echo "Environment variables set"
        env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          
      # Show Azure account details
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./Terraform/VirtualMachine

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate
        working-directory: ./Terraform/VirtualMachine

      # Plan Terraform changes
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: ./Terraform/VirtualMachine
        env:
          TF_VAR_adminpassword: ${{ secrets.TF_VAR_ADMINPASSWORD }}

      # Apply Terraform changes
      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform/VirtualMachine
        env:
          TF_VAR_adminpassword: ${{ secrets.TF_VAR_ADMINPASSWORD }}
