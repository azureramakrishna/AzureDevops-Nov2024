Agile process:
-------------

Backlogs

Sprint Model --> 2 weeks (Nov11 - Nov22)

Sprint Planning  (Nov 11)
    - Capacity planning 
    - Backlog items
        task1
        task2
        task3 

Daily standup calls ( 15 to 30min)

Retrospective: Nov 22
    - What went well           
    - What didnt went well      
    - What can be improved 

Agile flow:
----------

Epics
    Feature
        Userstory
            Taks
                issues


Amazon.in 

Epic        design a e-commerce website 
Features    Signup page 
            login page
            home page
            Product catalog 
            shipping cart 
            Payment gateway
            tracking 
            support

Userstories Signup page with google account 
            Signup page with apple account 
            Signup with email and password 

            Login with google account 
            Login with apple account 
            Login with email and password 

            product home page 


Version Contorl system (VCS):
----------------------------

- Git       
- GitHub


git clone <cloing url>
git add .
git commit -m "commit message"
git push origin main

git fetch   --> fetch the information --> git fetch origin develop
git pull    --> download and merge    --> git pull origin develop


Terraform templates -- Azure pipelines 
Java, .NET          -- Azure pipelines


Azure pipelines:
---------------

Pre-requisites:
--------------
- Service Connection:
   
    Service Principal (App registration)
        clientid: fa7105ed-1eae-478d-8433-b433e3862455
        tenantid: 459865f1-a8aa-450a-baec-8b47a9e5c904
        subscription: 2e28c82c-17d7-4303-b27a-4141b3d4088f

- Agent Pool:
  ----------
   - Microsoft-hosted agents
    Submit the form: https://aka.ms/azpipelines-parallelism-request 


   - Self-hosted agents:
    PAT: 4NeGMUvMmEdNl2fD9gp4xuv5Mnh3P5Bm210eq8Ry0UBmlQ5wA9S3JQQJ99AKACAAAAAAAAAAAAASAZDOYjWi

    1  mkdir myagent && cd myagent
    2  wget https://vstsagentpackage.azureedge.net/agent/4.246.1/vsts-agent-linux-x64-4.246.1.tar.gz
    3  ls
    4  tar zxvf vsts-agent-linux-x64-4.246.1.tar.gz
    5  ls
    6  ls -ltr
    7  rm -rf vsts-agent-linux-x64-4.246.1.tar.gz
    8  ls
    9  ./config.sh
   10  ls
   11  ./run.sh
   12  ls
   13  sudo ./svc.sh install
   14  sudo ./svc.sh start



Azure Pipelines:
---------------
- Classic editor (Manual pipeline)
- YAML pipeline (Automated pipeline) pipeline as a code


CI - Continuous integration
CD - Continuous deployment  (trigger - automatically deploy the artifacts)

CD - Continuous delivery (manual way of publishing the artifact)


Deploying a Java-based Tomcat application to Azure:
--------------------------------------------------

az group create --name MyResourceGroup --location westus

az appservice plan create --resource-group MyResourceGroup --name MyPlan --sku S1

az webapp create --resource-group MyResourceGroup --plan MyPlan --name saanvikitapp

az mysql flexible-server create --resource-group MyResourceGroup --name saanvikitdbserver --admin-user mysqldbuser --admin-password P2ssw0rd@123 --sku-name Standard_B1ms --tier Burstable --storage-size 32 


String url="jdbc:mysql://saanvikitdbserver.mysql.database.azure.com:3306/saanvikitdbserver?useSSL=true";myDbConn=DriverManager.getConnection(url, "mysqldbuser", "P2ssw0rd@123");

hostname:
saanvikitdbserver.mysql.database.azure.com


Docker:
------

Packing the application code and its depencies and running as a container 

Application code and dependencies --> Image --> Container

Docker installation
- Windows 
- Linux (Ubuntu 24.04)

    sudo usermod -aG docker azureuser


docker pull ubuntu:24.04 
docker run ubuntu:24.04
docker run --name myubuntu -itd ubuntu:24.04
docker ps
docker ps -a 
docker attach containerid/containername
ctrl + p + q  (for safe exist from the container)
docker start contanerid
docker stop containerid 
docker images 
docker images rm imagename:tag